// dotcalls to user functions and sexp functions
// should work
{a = 4} // leaving 4 on datastack??
(assert (== a 4))

(= %v 10)
(assert (== v 10))

(def greet "hello")
(defn g [b] (let [togeth (concat "say: " b)] (printf "g says %v\n" togeth) togeth))
(g "99999 whatsup")


(def expected "say: hello")
(assert (== (g greet) expected))
(assert (== (.greet) "hello"))

// automatic * dereference of a.f dot-symbol should
// happen for call-position
(def h2 (hash g:3 f:(fn [x] {x*x})))
(assert (== (h2.f 4) 16))

(def g h2.f)
(assert (== (g 3) 9))

// perhaps more properly, not depending on the auto-deference mechanism:
(def ff (* h2.f))
(assert (== (ff 3) 9))
