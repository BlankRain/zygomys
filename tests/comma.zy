// commas are actual tokens, not just white space;
// they build up an array
{a,b,c = true,false,true}
(assert a)
(assert c)
(assert (not b))

// array on RHS is okay
{aa,bb,cc = [11, 22, 33]}
(assert (== aa 11))
(assert (== bb 22))
(assert (== cc 33))

// array on LHS is not presently okay
// [f,g,h] = [4,5,6]

// (comma %a) should return [a], but was giving []
(comma %a)

{a11,b22,j33 = %a ,4,"hi"}
//re-assign within same types should be fine
{b22,a11= 56,%hello}

(assert (== (comma %a 3) [%a 3]))

{a1,b2 = 1,2}
// already bound, type mismatch: {a1,b2 = %hi, %there}
